/*
 * Copyright 2014 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'

android {
    namespace 'net.nurik.roman.muzei'
    compileSdk libs.versions.compileSdk.get().toInteger()

    Properties versionProps = new Properties()
    versionProps.load(new FileInputStream(file('../version.properties')))

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "net.nurik.roman.muzei"
        minSdkVersion 26
        targetSdkVersion libs.versions.targetSdk.get()

        versionName versionProps['name']
        versionCode versionProps['codeWear'].toInteger()

        def datalayerAuthorityValue = "com.google.android.apps.muzei.datalayer"
        manifestPlaceholders = [datalayerAuthority: datalayerAuthorityValue]
        buildConfigField "String", "DATA_LAYER_AUTHORITY", "\"${datalayerAuthorityValue}\""

        buildConfigField "String", "DEVICE_TYPE", "\"wear\""
    }

    signingConfigs {
        release {
            Properties localProps = new Properties()
            localProps.load(new FileInputStream(file('../local.properties')))
            Properties keyProps = new Properties()
            if (localProps['keystore.props.file'] != null) {
                keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
            }
            storeFile keyProps["store"] != null ? file(keyProps["store"]) : null
            keyAlias keyProps["alias"] ?: ""
            storePassword keyProps["storePass"] ?: ""
            keyPassword keyProps["pass"] ?: ""
        }
    }

    buildTypes {
        debug {
            versionNameSuffix " Debug"
            FirebasePerformance {
                instrumentationEnabled false
            }
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), file('proguard-project.txt')
            signingConfig signingConfigs.release
        }

        publicBeta.initWith(buildTypes.release)
        publicBeta {
            versionNameSuffix " " + versionProps['betaNumber']
        }
    }

    kotlinOptions {
        jvmTarget = '11'
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    api libs.coroutines.core
    api libs.coroutines.android
    api libs.coroutines.playservices
    implementation libs.coil
    implementation libs.concurrent
    implementation libs.workManager
    implementation libs.core
    implementation libs.lifecycle.livedata
    implementation libs.fragment
    implementation libs.exifInterface
    implementation libs.preference
    implementation libs.recyclerView
    implementation libs.watchface.core
    implementation libs.watchface.complications.data
    implementation libs.wear.core
    implementation libs.wear.phone
    implementation libs.wear.remote
    compileOnly libs.wearable.compile
    implementation libs.wearable.support

    implementation libs.wearable.playservices

    implementation project(':muzei-api')
    implementation project(':extensions')
    implementation project(':android-client-common')
    implementation project(':source-featured-art')
}

apply plugin: 'com.google.gms.google-services'